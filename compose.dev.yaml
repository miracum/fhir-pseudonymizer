services:
  jaeger:
    image: docker.io/jaegertracing/all-in-one:1.58@sha256:f015fb34e6742bb46b87c42cf83abfacfdd5dc39864a859a4ba942eb21c4b29c
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2g
          cpus: "1"
        reservations:
          memory: 1g
          cpus: "1"
    cap_drop:
      - ALL
    ipc: none
    security_opt:
      - "no-new-privileges:true"
    privileged: false
    ports:
      - "6831:6831/udp"
      - "127.0.0.1:16686:16686"

  vfps-db:
    image: docker.io/library/postgres:16.3@sha256:1bf73ccae25238fa555100080042f0b2f9be08eb757e200fe6afc1fc413a1b3c
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1g
          cpus: "1"
        reservations:
          memory: 1g
          cpus: "1"
    ipc: private
    security_opt:
      - "no-new-privileges:true"
    privileged: false
    environment:
      # kics-scan ignore-line
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: vfps

  vfps:
    image: ghcr.io/miracum/vfps:v1.3.5@sha256:358427b400bd260000396aecb0d4a6f874d394ccb52c62897953493a2b8aac15
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512m
          cpus: "2"
        reservations:
          memory: 512m
          cpus: "2"
    ipc: none
    cap_drop:
      - ALL
    read_only: true
    privileged: false
    security_opt:
      - "no-new-privileges:true"
    environment:
      COMPlus_EnableDiagnostics: "0"
      ForceRunDatabaseMigrations: "true"
      ConnectionStrings__PostgreSQL: "Host=vfps-db:5432;Database=vfps;Timeout=60;Max Auto Prepare=5;Application Name=vfps;Maximum Pool Size=50;"
      PGUSER: postgres
      # kics-scan ignore-line
      PGPASSWORD: postgres
      Tracing__IsEnabled: "true"
      Tracing__Jaeger__AgentHost: "jaeger"
      Pseudonymization__Caching__Namespaces__IsEnabled: "true"
    depends_on:
      - vfps-db
    ports:
      # Http1, Http2, Http3
      - "127.0.0.1:8080:8080"
      # Http2-only for plaintext gRPC
      - "127.0.0.1:8081:8081"

  gpas-entici-mock:
    image: docker.io/mockserver/mockserver:5.15.0@sha256:0f9ef78c94894ac3e70135d156193b25e23872575d58e2228344964273b4af6b
    ipc: none
    security_opt:
      - "no-new-privileges:true"
    cap_drop:
      - ALL
    privileged: false
    deploy:
      resources:
        limits:
          memory: 512m
          cpus: "1"
        reservations:
          memory: 512m
          cpus: "1"
    environment:
      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/initializer.json
      MOCKSERVER_WATCH_INITIALIZATION_JSON: "true"
    ports:
      - 127.0.0.1:1080:1080
    volumes:
      - ./hack/mocks:/config:ro

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.5@sha256:c916c668a5cd589948c3310ab31ffcfc5da55f0e546028f2f606419ce17c6ad8
    restart: unless-stopped
    profiles:
      - keycloak
    ipc: none
    security_opt:
      - "no-new-privileges:true"
    cap_drop:
      - ALL
    privileged: false
    deploy:
      resources:
        limits:
          memory: 2g
          cpus: "1"
        reservations:
          memory: 2g
          cpus: "1"
    command:
      - start-dev
      - --import-realm
    environment:
      KEYCLOAK_ADMIN: admin
      # kics-scan ignore-line
      KEYCLOAK_ADMIN_PASSWORD: admin
    volumes:
      - type: bind
        # /opt/keycloak/bin/kc.sh export --file /tmp/fhir-pseudonymizer-test-realm-export.json --realm fhir-pseudonymizer-test
        source: ./hack/keycloak/fhir-pseudonymizer-test-realm-export.json
        target: /opt/keycloak/data/import/fhir-pseudonymizer-test-realm-export.json
        read_only: true
    ports:
      - "127.0.0.1:8083:8080"
