name: ci

on:
  push:
    branches: [master]
  release:
    types: [created]
  pull_request:
    branches: [master]

permissions: read-all

jobs:
  build:
    uses: miracum/.github/.github/workflows/standard-build.yaml@614627d88ea531acb0b0f321f507b2c7c91a721d # v1.9.1
    permissions:
      contents: read
      id-token: write
      packages: write
      pull-requests: write
      actions: read
      security-events: write
    with:
      enable-build-test-layer: true
      enable-upload-test-image: true
    secrets:
      github-token: ${{ secrets.GITHUB_TOKEN }}

  test:
    runs-on: ubuntu-22.04
    needs:
      - build
    permissions:
      # for add Coverage PR Comment
      pull-requests: write
    steps:
      - name: "Checkout code"
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
        with:
          persist-credentials: false

      - name: Download image
        uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4.1.7
        if: ${{ github.event_name == 'pull_request' }}
        with:
          name: ${{ needs.build.outputs.image-slug }}
          path: /tmp

      - name: Load image
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          ls -lsa /tmp
          docker load --input /tmp/image.tar
          docker image ls

      - name: Download test image
        uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4.1.7
        with:
          name: ${{ needs.build.outputs.image-slug }}-test
          path: /tmp

      - name: Load test image
        run: |
          ls -lsa /tmp
          docker load --input /tmp/image-test.tar
          docker image ls

      - name: Copy unit test coverage reports from test container
        env:
          UNIT_TEST_IMAGE: ${{ fromJson(needs.build.outputs.test-image-meta-json).tags[0] }}
        run: |
          docker create --name=unit-test-container "${UNIT_TEST_IMAGE}"
          docker cp unit-test-container:/build/src/FhirPseudonymizer.Tests/coverage ./coverage

      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@51cc3a756ddcd398d447c044c02cb6aa83fdae95 # tag=v1.3.0
        with:
          filename: coverage/**/coverage.cobertura.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: "50 50"

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@331f8f5b4215f0445d3c07b4967662a32a2d3e31 # v2.9.0
        if: ${{ github.event_name == 'pull_request' }}
        with:
          recreate: true
          path: code-coverage-results.md

  iter8-test:
    name: run iter8 tests
    runs-on: ubuntu-22.04
    if: ${{ github.event_name == 'pull_request' }}
    needs:
      - build
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6

      - name: install iter8 cli
        env:
          ITER8_CLI_URL: "https://github.com/iter8-tools/iter8/releases/download/v0.13.18/iter8-linux-amd64.tar.gz"
        run: |
          curl -LSs "${ITER8_CLI_URL}" | tar xz
          mv linux-amd64/iter8 /usr/local/bin/iter8
          chmod +x /usr/local/bin/iter8
          iter8 version

      - name: Create KinD cluster
        uses: helm/kind-action@0025e74a8c7512023d06dc019c617aa3cf561fde # v1.10.0
        with:
          cluster_name: kind

      - name: Download image
        uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4.1.7
        with:
          name: ${{ needs.build.outputs.image-slug }}
          path: /tmp

      - name: Load image into KinD
        run: |
          kind load image-archive /tmp/image.tar

      - name: List images in cluster
        run: docker exec kind-control-plane crictl images

      - name: Install "fhir-pseudonymizer"
        env:
          IMAGE_TAG: ${{ needs.build.outputs.image-version }}
        run: |
          helm install \
            --set="image.tag=${IMAGE_TAG}" \
            -f tests/iter8/values.yaml \
            --wait \
            --timeout=10m \
            fhir-pseudonymizer \
            oci://ghcr.io/miracum/charts/fhir-pseudonymizer

      - name: Launch iter8 experiment
        run: kubectl apply -f tests/iter8/experiment.yaml

      - name: Wait for experiment completion
        run: iter8 k assert -c completed --timeout 10m

      - name: Assert no failures and SLOs are satisfied
        run: iter8 k assert -c nofailure,slos

      - name: Create iter8 reports
        if: always()
        run: |
          iter8 k report | tee iter8-report.txt
          iter8 k report -o html > iter8-report.html

      - name: Enhance iter8 report output for use as a PR comment
        run: |
          ITER8_REPORT_TXT=$(cat iter8-report.txt)
          {
            echo -e '---';
            echo -e '## iter8 report';
            echo -e '```console';
            echo -e "${ITER8_REPORT_TXT}";
            echo -e '```'
          } >> iter8-output.md

      - name: Append sticky comment with iter8 report
        uses: marocchino/sticky-pull-request-comment@331f8f5b4215f0445d3c07b4967662a32a2d3e31 # v2.9.0
        if: ${{ github.event_name == 'pull_request' }}
        with:
          append: true
          path: iter8-output.md

      - name: Upload report
        if: always()
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        with:
          name: iter8-report.html
          path: |
            iter8-report.html

      - name: Print cluster and iter8 logs
        if: always()
        run: |
          kubectl cluster-info dump -o yaml | tee kind-cluster-dump.txt
          iter8 k log -l trace

      - name: Upload cluster dump
        if: always()
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        with:
          name: kind-cluster-dump.txt
          path: |
            kind-cluster-dump.txt

  lint:
    uses: miracum/.github/.github/workflows/standard-lint.yaml@614627d88ea531acb0b0f321f507b2c7c91a721d # v1.9.1
    permissions:
      contents: read
      pull-requests: write
      issues: write
      security-events: write
      actions: read
    with:
      enable-validate-gradle-wrapper: false
      codeql-languages: '["csharp"]'
      enable-codeql: true
      enable-verify-base-image-signature: false
    secrets:
      github-token: ${{ secrets.GITHUB_TOKEN }}

  release:
    uses: miracum/.github/.github/workflows/standard-release.yaml@614627d88ea531acb0b0f321f507b2c7c91a721d # v1.9.1
    needs:
      - build
      - test
    permissions:
      contents: write
      pull-requests: write
      issues: write
    secrets:
      semantic-release-token: ${{ secrets.MIRACUM_BOT_SEMANTIC_RELEASE_TOKEN }}
